plugins {
    id 'war'
    //id "com.eriwen.gradle.css" version "2.14.0"
    //id "eu.butter.gradle.js" version "2.15.1"
    // id "org.padler.gradle.minify" version "1.7.0" // TODO: Replace above plugins with this one as above don't work with Gradle 6
}

description = "EPICS to web gateway"
group 'org.jlab'
version '1.12.0'

ext {
    releaseDate = 'September 27 2021'
    productionRelease = 'true'
}

repositories {
    mavenCentral()
}

tasks.withType(JavaCompile) {
    options.release = 8
    options.encoding = 'UTF-8'
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

sourceSets {
    integration {
        java.srcDir "${projectDir}/src/integration/java"
        resources.srcDir "${projectDir}/src/integration/resources"
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

configurations {
    testImplementation.extendsFrom compileOnly
    integrationImplementation.extendsFrom implementation
    integrationRuntimeOnly.extendsFrom runtimeOnly
}

dependencies {
    implementation 'javax.servlet:jstl:1.2',
                   'org.glassfish:javax.json:1.1.4',
                   files('lib/jca-2.4.6.jar')
    //implementation 'org.epics:jca:2.4.6' // Only works with Java 11 runtime
    providedCompile 'javax:javaee-api:7.0'

    testImplementation 'junit:junit:4.13'

    integrationImplementation 'org.testcontainers:testcontainers:1.16.3',
                              'org.slf4j:slf4j-log4j12:1.7.28'
}

task integrationTest(type: Test) {
    description = 'Runs integration tests.'
    group = 'verification'

    testClassesDirs = sourceSets.integration.output.classesDirs
    classpath = sourceSets.integration.runtimeClasspath
    //shouldRunAfter test

    testLogging {
        showStandardStreams = true
    }
}

test {
    classpath = project.sourceSets.test.runtimeClasspath + files("${projectDir}/examples/softioc-db")

    testLogging {
        showStandardStreams = true
    }
}

processIntegrationResources {
    duplicatesStrategy 'include'
}

war {
    //dependsOn(minifyCss)
    //dependsOn(minifyJs)
    archiveFileName = 'epics2web.war'
    filesMatching('WEB-INF/web.xml') {
        filter {
            String line -> line.replaceAll("@VERSION@", project.version)
        }
        filter {
            String line -> line.replaceAll("@RELEASE_DATE@", releaseDate)
        }
        filter {
            String line -> line.replaceAll("@PRODUCTION_RELEASE@", productionRelease)
        }
    }
    from('build') {
        include '*.min.css'
        into 'resources/css/'
    }
    from('build') {
        include '*.min.js'
        into 'resources/js/'
    }
}

/*minifyCss {
    source = "${projectDir}/src/main/webapp/resources/css/epics2web.css"
    dest = file("${projectDir}/build/epics2web.min.css")
}

minifyJs {
    source = "${projectDir}/src/main/webapp/resources/js/epics2web.js"
    dest = file("${projectDir}/build/epics2web.min.js")
}*/