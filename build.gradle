plugins {
    id 'war'
    id ("org.gradlewebtools.minify") version "2.1.1"
}

description = "EPICS to web gateway"
group = 'org.jlab'
version = new File("${projectDir}/VERSION").text.trim()
ext.version = project.version
ext.releaseDate = new Date().format('MMM dd yyyy')
ext.productionRelease = 'true'

compileJava {
    options.release = 8
}

compileTestJava {
    options.release = 11
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

repositories {
    mavenCentral()
}

sourceSets {
    integration {
        java.srcDir "${projectDir}/src/integration/java"
        resources.srcDir "${projectDir}/src/integration/resources"
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

configurations {
    integrationImplementation.extendsFrom testImplementation
    integrationRuntimeOnly.extendsFrom runtimeOnly
}

dependencies {
    implementation 'javax.servlet:jstl:1.2',
                   'org.glassfish:javax.json:1.1.4',
                   files('lib/jca-2.4.6.jar')
    //implementation 'org.epics:jca:2.4.6' // Only works with Java 11 runtime
    providedCompile 'javax:javaee-api:7.0'

    testImplementation 'junit:junit:4.13.2'
}

tasks.register('integrationTest', Test) {
    description = 'Runs integration tests.'
    group = 'verification'

    testClassesDirs = sourceSets.integration.output.classesDirs
    classpath = sourceSets.integration.runtimeClasspath

    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat = "full"
        showStandardStreams = true
    }
}

processIntegrationResources {
    duplicatesStrategy = 'include'
}

tasks.register('cssMinifyIt', org.gradlewebtools.minify.CssMinifyTask) {
    srcDir = project.file("src/main/webapp/resources/css")
    dstDir = project.file("build")
}

tasks.register('jsMinifyIt', org.gradlewebtools.minify.JsMinifyTask) {
    srcDir = project.file("src/main/webapp/resources/js")
    dstDir = project.file("build")
}

test {
    dependsOn(cssMinifyIt)
    dependsOn(jsMinifyIt)
}

jar {
    dependsOn(cssMinifyIt)
    dependsOn(jsMinifyIt)
}

war {
    dependsOn(cssMinifyIt)
    dependsOn(jsMinifyIt)
    archiveFileName = 'epics2web.war'
    filesMatching('WEB-INF/web.xml') {
        filter {
            String line -> line.replaceAll("@VERSION@", version)
        }
        filter {
            String line -> line.replaceAll("@RELEASE_DATE@", releaseDate)
        }
        filter {
            String line -> line.replaceAll("@PRODUCTION_RELEASE@", productionRelease)
        }
    }
    from('build') {
        include '*.min.css'
        into 'resources/css/'
    }
    from('build') {
        include '*.min.js'
        into 'resources/js/'
    }
}