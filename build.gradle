plugins {
    id 'war'
    id 'org.gradlewebtools.minify' version '2.1.1'
    id 'com.diffplug.spotless' version '7.2.1'
}

description = "EPICS to web gateway"
group = 'org.jlab'
version = new File("${projectDir}/VERSION").text.trim()
ext.version = project.version
ext.releaseDate = new Date().format('MMM dd yyyy')
ext.productionRelease = 'true'

compileJava {
    options.release = 21
}

compileTestJava {
    options.release = 21
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

repositories {
    mavenCentral()
}

sourceSets {
    integration {
        java.srcDir "${projectDir}/src/integration/java"
        resources.srcDir "${projectDir}/src/integration/resources"
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

configurations {
    integrationImplementation.extendsFrom testImplementation
    integrationRuntimeOnly.extendsFrom runtimeOnly
}

dependencies {
    implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api:3.0.0',
                   'org.glassfish.web:jakarta.servlet.jsp.jstl:3.0.0',
                   'org.glassfish:jakarta.json:2.0.1',
                   'org.epics:jca:2.4.10'
    providedCompile 'jakarta.servlet:jakarta.servlet-api:6.1.0',
                    'jakarta.websocket:jakarta.websocket-api:2.2.0',
                    'jakarta.websocket:jakarta.websocket-client-api:2.2.0'
    testImplementation 'junit:junit:4.13.2'
}

tasks.register('integrationTest', Test) {
    description = 'Runs integration tests.'
    group = 'verification'

    testClassesDirs = sourceSets.integration.output.classesDirs
    classpath = sourceSets.integration.runtimeClasspath

    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat = "full"
        showStandardStreams = true
    }
}

processIntegrationResources {
    duplicatesStrategy = 'include'
}

tasks.register('cssMinifyIt', org.gradlewebtools.minify.CssMinifyTask) {
    srcDir = project.file("src/main/webapp/resources/css")
    dstDir = project.file("build")
}

tasks.register('jsMinifyIt', org.gradlewebtools.minify.JsMinifyTask) {
    srcDir = project.file("src/main/webapp/resources/js")
    dstDir = project.file("build")
}

test {
    dependsOn(cssMinifyIt)
    dependsOn(jsMinifyIt)
}

tasks.named('jar') {
    enabled = false
}

war {
    dependsOn(cssMinifyIt)
    dependsOn(jsMinifyIt)
    archiveFileName = 'epics2web.war'
    filesMatching('WEB-INF/web.xml') {
        filter {
            String line -> line.replaceAll("@VERSION@", version)
        }
        filter {
            String line -> line.replaceAll("@RELEASE_DATE@", releaseDate)
        }
        filter {
            String line -> line.replaceAll("@PRODUCTION_RELEASE@", productionRelease)
        }
    }
    from('build') {
        include '*.min.css'
        into 'resources/css/'
    }
    from('build') {
        include '*.min.js'
        into 'resources/js/'
    }
}

spotless {
    java {
        googleJavaFormat()
    }
}